@using Microsoft.AspNetCore.Components.Routing
@using NDiscoKit.Components.Branding
@using NDiscoKit.Components.Layout
@using NDiscoKit.Models
@inherits LayoutComponentBase

@layout BaseLayout

<MudLayout>
    <MudAppBar Dense Elevation="0">
        <MudStack Style="flex:1" Row AlignItems="AlignItems.Center">
            <MudIconButton Icon="@(Icons.Material.Rounded.Menu)" Color="Color.Inherit" Edge="Edge.Start" OnClick="ToggleDrawer" />
            <NDiscoKitWordmark />
        </MudStack>

        <MudStack Row AlignItems="AlignItems.Center">
            <MudMenu Disabled="@startingRecord" OpenChanged="AudioSourceMenuOpened">
                <ActivatorContent>
                    @if (!startingRecord)
                    {
                        AudioSource? source = AudioService.Source;
                        <MudChip T="object" Icon="@(GetAudioSourceIcon(source))" Color="@(GetAudioSourceColor(source))">
                            @(GetAudioSourceLabel(source))
                        </MudChip>
                    }
                    else
                    {
                        <MudChip T="object" Color="@(GetAudioSourceColor(startingRecordSource))">
                            <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                                <MudProgressCircular Indeterminate Size="Size.Small" Color="Color.Inherit" />
                                Starting...
                            </MudStack>
                        </MudChip>
                    }
                </ActivatorContent>
                <ChildContent>
                    @{
                        ReadOnlySpan<AudioSource?> tmp = [null, .. Enum.GetValues<AudioSource>()];
                        foreach (AudioSource? source in tmp)
                        {
                            bool sourceNotFound = SourceNotFound(source);

                            <MudMenuItem Disabled="@sourceNotFound" Icon="@(GetAudioSourceIcon(source))" IconColor="@(GetAudioSourceColor(source))" OnClick="@(async () => await SetAudioSource(source, updateSettings: true))">
                                <MudStack Spacing="0">
                                    @(GetAudioSourceLabel(source))

                                    @if (sourceNotFound)
                                    {
                                        <MudText Class="mt-n1" Typo="Typo.caption">Not Found</MudText>
                                    }
                                </MudStack>
                            </MudMenuItem>
                        }
                    }
                </ChildContent>
            </MudMenu>
        
            <MudSwitch T="bool" Label="Disco" Value="@(DiscoService.IsRunning)" ValueChanged="@SetDiscoRunning" />
        </MudStack>
    </MudAppBar>
    <MudDrawer Color="Color.Primary" Elevation="0" Class="pt-4" @bind-Open="@drawerOpen" ClipMode="DrawerClipMode.Docked">
        <NDiscoKitWordmark Class="pl-4 d-md-none" />
        <MudNavMenu Class="pa-2" Rounded Margin="Margin.Normal">
            <CustomNavLink Href="/" Match="NavLinkMatch.All" Icon="@(Icons.Material.Rounded.Dashboard)">Dashboard</CustomNavLink>
            <CustomNavLink Href="/lights" Icon="@(Icons.Material.Rounded.Lightbulb)">Lights</CustomNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>